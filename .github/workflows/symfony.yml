name: Symfony

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    # Utilisation de la version taggée de l'action setup-php
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        
    # Checkout du code source
    - uses: actions/checkout@v4

    # Copie du fichier .env.local à partir de .env.example s'il n'existe pas
    - name: Copy .env.local
      run: php -r "file_exists('.env.local') || copy('.env.test', '.env.local');"

    # Mise en cache des dépendances Composer
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    # Installation des dépendances Composer
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    # Création de la base de données SQLite
    - name: Create Database
      run: |
        mkdir -p data
        touch data/database.sqlite

    # Exécution des tests PHPUnit
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
      run: vendor/bin/phpunit
