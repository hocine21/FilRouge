
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{{ asset('css/super-admin.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;700&display=swap">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <title>Page d'Accueil</title>
</head>

<body>
    <header>
        <div class="container">
            <a href="#">
                <h1>COUP'ACIER</h1>
            </a>
            <div>
                <a href="#"><h1>ADMINISTRATEUR</h1></a>
            </div>
        </div>
    </header>
    <div class="container-block">
        <div class="block-text">
            <h1>Bienvenue sur la page ADMINISTRATEUR, vous pouvez vous connecter et serez redirigé vers votre plateforme :</h1>
            <div class="button">
                <button id="createUserButton" class="create">Créer un utilisateur</button>
                <button id="deleteUserButton" class="delete">Supprimer un utilisateur</button>
                <button id="modifyUserButton" class="modify">Modifier utilisateur</button>
            </div>
        </div>
        <div id="formContainer" class="form-container" style="visibility: hidden;">
            <h2>Ajouter un utilisateur</h2>
            <form id="inscriptionForm">
                <div class="form-group">
                    <label for="nom">Nom</label>
                    <input type="text" id="nom" name="Nom" required>
                </div>
                <div class="form-group">
                    <label for="prenom">Prénom</label>
                    <input type="text" id="prenom" name="Prenom" required>
                </div>
                <div class="form-group">
                    <label for="service">Service</label>
                    <select id="service" name="Roles" class="custom-select" required>
                        <option value="">Sélectionnez un service</option>
                        <option value="ROLE_COMMERCIAL">Commercial</option>
                        <option value="ROLE_APPROVISIONNEMENT">Approvisionnement</option>
                        <option value="ROLE_LIVREUR">Livreur</option>
                        <option value="ROLE_SUPER_ADMIN">Super Admin</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="email">Adresse email</label>
                    <input type="email" id="email" name="AdresseEmail" required>
                </div>
                <div class="form-group">
                    <label for="mot-de-passe">Mot de passe provisoire</label>
                    <input type="password" id="mot-de-passe" name="MotDePasse" required>
                </div>
                <div class="form-group">
                    <input type="submit" value="S'inscrire">
                </div>
                <button type="button" id="back">Retour</button>
            </form>
        </div>
        <div id="deleteContainer" style="visibility: hidden;">
            <h1>Choisissez le service de l'utilisateur :</h1>
            <div class="btn-deleteContainer">
                <button id="commercial">Commercial</button>
                <button id="appro">Approvisionnement</button>
                <button id="rCom">Récéption commandes</button>
                <button id="rMat">Récéption matériaux</button>
            </div>
            <div class="btn-back">
                <button id="back-deleteContainer">Retour</button>
            </div>
            <div id="deleteContainerCommercial" style="visibility: hidden;">
                <div class="search-bar">
                    <input type="text" id="searchInput" placeholder="Rechercher par nom..." oninput="searchEmployees()">
                    <button><i class="fas fa-search"></i></button>
                </div>
            </div>
            <div class="table">
                <table id="employeeTable" style="visibility: hidden;">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Nom</th>
                            <th>Prénom</th>
                            <th>Date de naissance</th>
                            <th>Poste</th>
                            <th>Service</th>
                            <th>Adresse email</th>
                            <th>Mot de passe</th>
                            <th>Coche</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <footer>
        <p>Ceci est le pied de page.</p>
    </footer>

    <script>
document.addEventListener('DOMContentLoaded', function () {
    // Cacher les conteneurs au départ
    document.getElementById('formContainer').style.visibility = 'hidden';
    document.getElementById('deleteContainer').style.visibility = 'hidden';

    // Écouteur pour afficher le formulaire lors du clic sur "Créer un utilisateur"
    document.getElementById('createUserButton').addEventListener('click', function () {
        document.getElementById('formContainer').style.visibility = 'visible';
        document.getElementById('deleteContainer').style.visibility = 'hidden'; // Cacher l'autre container
    });

    // Écouteur pour afficher la section de suppression d'utilisateur
    document.getElementById('deleteUserButton').addEventListener('click', function () {
        document.getElementById('deleteContainer').style.visibility = 'visible';
        document.getElementById('formContainer').style.visibility = 'hidden'; // Cacher l'autre container
    });

    // Écouteur pour afficher la section de modification d'utilisateur
    document.getElementById('modifyUserButton').addEventListener('click', function () {
        document.getElementById('deleteContainer').style.visibility = 'visible';
        document.getElementById('formContainer').style.visibility = 'hidden'; // Cacher l'autre container
    });

    // Écouteur pour cacher le formulaire lors du clic sur le bouton "Retour"
    document.getElementById('back').addEventListener('click', function () {
        document.getElementById('formContainer').style.visibility = 'hidden';
    });

    // Gérer l'envoi du formulaire d'inscription
    document.getElementById('inscriptionForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Empêcher le comportement par défaut du formulaire

        // Récupérer le token depuis le localStorage
        const authToken = localStorage.getItem('authToken');

        // Récupérer les données du formulaire
        const formData = {
            Nom: document.getElementById('nom').value,
            Prenom: document.getElementById('prenom').value,
            AdresseEmail: document.getElementById('email').value,
            MotDePasse: document.getElementById('mot-de-passe').value,
            Roles: [document.getElementById('service').value] // Utiliser la valeur du service sélectionné comme rôle
        };

        // Envoyer les données au serveur avec le token dans l'en-tête d'autorisation
        fetch('http://localhost:8080/api/inscription/employe', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${authToken}` // Ajouter l'en-tête Authorization avec le token
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(error => {
                    throw new Error(error.message || 'Erreur lors de la requête au serveur');
                });
            }
            return response.json();
        })
        .then(data => {
            // Traitement de la réponse JSON retournée par l'API
            console.log(data);
            alert('Utilisateur ajouté avec succès !');
            document.getElementById('formContainer').style.visibility = 'hidden'; // Cacher le formulaire après soumission
        })
        .catch(error => {
            // Gérer les erreurs
            console.error('Erreur:', error);
            alert('Erreur lors de l\'ajout de l\'utilisateur.');
        });
    });

    // Écouteur pour le changement de sélection du service
    document.getElementById('service').addEventListener('change', function(event) {
        const selectedService = event.target.value;
        console.log('Service sélectionné:', selectedService);
    });
});
    </script>
</body>

</html>
